<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>SkorCuter Editor</title>
  <style>
    * { margin: 0; padding: 0; box-sizing: border-box; font-family: 'Segoe UI', sans-serif; }
    html, body { height: 100%; overflow: hidden; }
    body { background: #1e1e1e; color: white; }

    #tab-bar {
      background: #252526;
      display: flex;
      padding: 5px;
      overflow-x: auto;
      align-items: center;
    }
    .tab {
      background: #333;
      color: #ccc;
      padding: 6px 12px;
      margin-right: 4px;
      border-radius: 6px;
      cursor: pointer;
      transition: background 0.3s, transform 0.2s;
      display: flex;
      align-items: center;
      user-select: none;
    }
    .tab:hover {
      background: #444;
      transform: scale(1.05);
    }
    .tab.active {
      background: #007acc;
      color: white;
    }
    .tab span {
      margin-right: 6px;
    }
    .tab input {
      background: #444;
      color: white;
      border: none;
      padding: 2px 4px;
      font-size: 14px;
      width: 100px;
    }
    .close-btn {
      background: transparent;
      color: red;
      border: none;
      font-size: 16px;
      cursor: pointer;
    }
    #add-tab {
      background: #0a0;
      color: white;
      padding: 6px 14px;
      border-radius: 6px;
      cursor: pointer;
      font-weight: bold;
      margin-left: auto;
      transition: background 0.3s;
    }
    #add-tab:hover {
      background: #0c0;
    }
    #editor-container {
      position: relative;
      height: calc(100vh - 44px);
    }
    .editor-tab {
      position: absolute;
      width: 100%;
      height: 100%;
      display: none;
      animation: fadeIn 0.3s ease;
    }
    .editor-tab.active {
      display: block;
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(5px); }
      to { opacity: 1; transform: translateY(0); }
    }
  </style>
</head>
<body>
  <div id="tab-bar">
    <div id="add-tab">+ New Tab</div>
  </div>
  <div id="editor-container"></div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js"></script>
  <script>
    let editorCount = 0
    let editors = {}
    let tabs = []
    let activeTab = null

    require.config({ paths: { 'vs': 'https://cdn.jsdelivr.net/npm/monaco-editor@0.45.0/min/vs' } })
    require(['vs/editor/editor.main'], function () {

      function createTab(content = 'print("Welcome To SkorCuter !")', language = 'lua') {
        const tabId = `tab-${editorCount}`
        const editorId = `editor-${editorCount}`
        const name = `Tab ${editorCount + 1}`
        editorCount++

        const tabEl = document.createElement('div')
        tabEl.className = 'tab'
        tabEl.dataset.target = editorId

        const nameSpan = document.createElement('span')
        nameSpan.textContent = name
        nameSpan.ondblclick = () => {
          const input = document.createElement('input')
          input.value = nameSpan.textContent
          tabEl.replaceChild(input, nameSpan)
          input.focus()
          input.onblur = () => {
            nameSpan.textContent = input.value || name
            tabEl.replaceChild(nameSpan, input)
          }
          input.onkeydown = e => {
            if (e.key === 'Enter') input.blur()
          }
        }

        const closeBtn = document.createElement('button')
        closeBtn.className = 'close-btn'
        closeBtn.innerHTML = '&times;'
        closeBtn.onclick = () => {
          const idx = tabs.findIndex(t => t.id === tabId)
          document.getElementById(editorId).remove()
          tabEl.remove()
          delete editors[editorId]
          tabs.splice(idx, 1)

          if (tabs.length > 0) {
            const nextIdx = idx > 0 ? idx - 1 : 0
            const nextTab = tabs[nextIdx]
            switchTab(nextTab.editorId, nextTab.id)
          } else {
            activeTab = null
          }
        }

        tabEl.appendChild(nameSpan)
        tabEl.appendChild(closeBtn)
        tabEl.id = tabId
        document.getElementById('tab-bar').insertBefore(tabEl, document.getElementById('add-tab'))

        const editorDiv = document.createElement('div')
        editorDiv.className = 'editor-tab'
        editorDiv.id = editorId
        document.getElementById('editor-container').appendChild(editorDiv)

        const editor = monaco.editor.create(editorDiv, {
          value: content,
          language: language,
          theme: 'vs-dark',
          automaticLayout: true
        })

        editors[editorId] = editor
        tabs.push({ id: tabId, editorId })

        tabEl.addEventListener('click', () => switchTab(editorId, tabId))

        switchTab(editorId, tabId)
      }

      function switchTab(editorId, tabId) {
        document.querySelectorAll('.editor-tab').forEach(e => e.classList.remove('active'))
        document.querySelectorAll('.tab').forEach(e => e.classList.remove('active'))

        document.getElementById(editorId).classList.add('active')
        document.getElementById(tabId).classList.add('active')
        activeTab = editorId
      }

      document.getElementById('add-tab').onclick = () => {
        const langs = ['lua', 'python', 'javascript', 'csharp']
        const randomLang = langs[Math.floor(Math.random() * langs.length)]
        const templates = {
          lua: 'print("Welcome To SkorCuter !")',
          python: 'print("Welcome To SkorCuter !")',
          javascript: 'console.log("Welcome To SkorCuter !")',
          csharp: 'Console.WriteLine("Welcome To SkorCuter !");'
        }
        createTab(templates[randomLang], randomLang)
      }

      createTab()
    })
  </script>
</body>
</html>
